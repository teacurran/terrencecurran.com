name: CI / CD

# Controls when the action will run.
on:
  # Triggers the workflow on push for the main branch
  push:
    branches: [ draft ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'us-east-1'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ./jekyll/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          bundler-cache: true
      - name: "Bundle install"
        env:
          RAILS_ENV: test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./jekyll
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
        working-directory: ./jekyll
      - name: "Build Site"
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
        working-directory: ./jekyll
      - name: "Deploy to AWS S3"
        run: aws s3 sync ./_site/ s3://${{ secrets.AWS_DRAFT_S3_BUCKET_NAME }} --acl public-read --delete --cache-control max-age=604800
        working-directory: ./jekyll
      - name: "Create AWS Cloudfront Invalidation"
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DRAFT_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        working-directory: ./jekyll
